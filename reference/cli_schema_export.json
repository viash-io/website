[
  {
    "name" : "run",
    "bannerCommand" : "viash run",
    "bannerDescription" : "Executes a viash component from the provided viash config file. viash generates a temporary executable and immediately executes it with the given parameters.",
    "bannerUsage" : "viash run config.vsh.yaml [-p docker] [-k true/false]  -- [arguments for script]",
    "footer" : "  -- param1 param2 ...    Extra parameters to be passed to the component itself.\n                          -- is used to separate viash arguments from the arguments\n                          of the component.\n\nThe temporary directory can be altered by setting the VIASH_TEMP directory. Example:\n  export VIASH_TEMP=/home/myuser/.viash_temp\n  viash run config.vsh.yaml",
    "subcommands" : [
    ],
    "opts" : [
      {
        "name" : "runner",
        "descr" : "Specifies which runner amongst those specified in the config to use. If this is not provided, the first runner will be used. If no runners are defined in the config, the executable runner will be used.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "engine",
        "descr" : "A regex to determine which engines amongst those specified in the config to use. If this is not provided, all engines will be used. If no engines are defined in the config, the native engine will be used.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "config",
        "descr" : "A viash config file (example: `config.vsh.yaml`). This argument can also be a script with the config as a header.",
        "default" : "config.vsh.yaml",
        "required" : true,
        "hidden" : false,
        "type" : "String",
        "optType" : "trailArgs"
      },
      {
        "name" : "config_mod",
        "short" : "c",
        "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
        "default" : "List()",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "List[String]",
        "optType" : "opt"
      },
      {
        "name" : "keep",
        "short" : "k",
        "descr" : "Whether or not to keep temporary files. By default, files will be deleted if all goes well but remain when an error occurs. By specifying --keep true, the temporary files will always be retained, whereas --keep false will always delete them. The temporary directory can be overwritten by setting defining a VIASH_TEMP directory.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "cpus",
        "descr" : "The maximum number of (logical) cpus a component is allowed to use.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "Int",
        "optType" : "opt"
      },
      {
        "name" : "memory",
        "descr" : "The maximum amount of memory a component is allowed to allocate. Unit must be one of B, KB, MB, GB, TB or PB.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "colorize",
        "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "choices" : [
          "true",
          "false",
          "auto"
        ],
        "type" : "String",
        "optType" : "choice"
      },
      {
        "name" : "loglevel",
        "descr" : "Specify the log level in use",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "choices" : [
          "error",
          "warn",
          "info",
          "debug",
          "trace"
        ],
        "type" : "String",
        "optType" : "choice"
      }
    ]
  },
  {
    "name" : "build",
    "bannerCommand" : "viash build",
    "bannerDescription" : "Build an executable from the provided viash config file.",
    "bannerUsage" : "viash build config.vsh.yaml -o output [-p docker] [-m] [-s]",
    "subcommands" : [
    ],
    "opts" : [
      {
        "name" : "runner",
        "descr" : "Specifies which runner amongst those specified in the config to use. If this is not provided, the first runner will be used. If no runners are defined in the config, the executable runner will be used.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "engine",
        "descr" : "A regex to determine which engines amongst those specified in the config to use. If this is not provided, all engines will be used. If no engines are defined in the config, the native engine will be used.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "config",
        "descr" : "A viash config file (example: `config.vsh.yaml`). This argument can also be a script with the config as a header.",
        "default" : "config.vsh.yaml",
        "required" : true,
        "hidden" : false,
        "type" : "String",
        "optType" : "trailArgs"
      },
      {
        "name" : "config_mod",
        "short" : "c",
        "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
        "default" : "List()",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "List[String]",
        "optType" : "opt"
      },
      {
        "name" : "colorize",
        "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "choices" : [
          "true",
          "false",
          "auto"
        ],
        "type" : "String",
        "optType" : "choice"
      },
      {
        "name" : "loglevel",
        "descr" : "Specify the log level in use",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "choices" : [
          "error",
          "warn",
          "info",
          "debug",
          "trace"
        ],
        "type" : "String",
        "optType" : "choice"
      },
      {
        "name" : "output",
        "short" : "o",
        "descr" : "Path to directory in which the executable and any resources is built to. Default: \"output/\".",
        "default" : "output/",
        "required" : true,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "setup",
        "short" : "s",
        "descr" : "Which @[setup strategy](docker_setup_strategy) for creating the container to use [Docker Engine only].",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "push",
        "descr" : "Whether or not to push the container to a Docker registry [Docker Engine only].",
        "default" : "false",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "Boolean",
        "optType" : "opt"
      }
    ]
  },
  {
    "name" : "test",
    "bannerCommand" : "viash test",
    "bannerDescription" : "Test the component using the tests defined in the viash config file.",
    "bannerUsage" : "viash test config.vsh.yaml [-p docker] [-k true/false] [--setup cachedbuild]",
    "footer" : "\nThe temporary directory can be altered by setting the VIASH_TEMP directory. Example:\n  export VIASH_TEMP=/home/myuser/.viash_temp\n  viash run meta.vsh.yaml",
    "subcommands" : [
    ],
    "opts" : [
      {
        "name" : "runner",
        "descr" : "Specifies which runner amongst those specified in the config to use. If this is not provided, the first runner will be used. If no runners are defined in the config, the executable runner will be used.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "engine",
        "descr" : "A regex to determine which engines amongst those specified in the config to use. If this is not provided, all engines will be used. If no engines are defined in the config, the native engine will be used.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "config",
        "descr" : "A viash config file (example: `config.vsh.yaml`). This argument can also be a script with the config as a header.",
        "default" : "config.vsh.yaml",
        "required" : true,
        "hidden" : false,
        "type" : "String",
        "optType" : "trailArgs"
      },
      {
        "name" : "config_mod",
        "short" : "c",
        "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
        "default" : "List()",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "List[String]",
        "optType" : "opt"
      },
      {
        "name" : "keep",
        "short" : "k",
        "descr" : "Whether or not to keep temporary files. By default, files will be deleted if all goes well but remain when an error occurs. By specifying --keep true, the temporary files will always be retained, whereas --keep false will always delete them. The temporary directory can be overwritten by setting defining a VIASH_TEMP directory.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "cpus",
        "descr" : "The maximum number of (logical) cpus a component is allowed to use.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "Int",
        "optType" : "opt"
      },
      {
        "name" : "memory",
        "descr" : "The maximum amount of memory a component is allowed to allocate. Unit must be one of B, KB, MB, GB, TB or PB.",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "colorize",
        "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "choices" : [
          "true",
          "false",
          "auto"
        ],
        "type" : "String",
        "optType" : "choice"
      },
      {
        "name" : "loglevel",
        "descr" : "Specify the log level in use",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "choices" : [
          "error",
          "warn",
          "info",
          "debug",
          "trace"
        ],
        "type" : "String",
        "optType" : "choice"
      },
      {
        "name" : "setup",
        "short" : "s",
        "descr" : "Which @[setup strategy](docker_setup_strategy) for creating the container to use [Docker Engine only].",
        "required" : false,
        "argName" : "arg",
        "hidden" : false,
        "type" : "String",
        "optType" : "opt"
      },
      {
        "name" : "dry_run",
        "descr" : "Only generate the test script, do not run the test.",
        "default" : "false",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "type" : "Boolean",
        "optType" : "opt"
      },
      {
        "name" : "deterministic_working_directory",
        "descr" : "Name of the working directory in the temporary directory. If not set, the working directory name will be a partially randomized name.",
        "required" : false,
        "argName" : "arg",
        "hidden" : true,
        "type" : "String",
        "optType" : "opt"
      }
    ]
  },
  {
    "name" : "ns",
    "subcommands" : [
      {
        "name" : "build",
        "bannerCommand" : "viash ns build",
        "bannerDescription" : "Build a namespace from many viash config files.",
        "bannerUsage" : "viash ns build [-n nmspc] [-s src] [-t target] [-p docker] [--setup] [--push] [--parallel] [--flatten]",
        "subcommands" : [
        ],
        "opts" : [
          {
            "name" : "query",
            "short" : "q",
            "descr" : "Filter which components get selected by component and @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace/component1$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_namespace",
            "short" : "n",
            "descr" : "Filter which namespaces get selected by @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_name",
            "descr" : "Filter which components get selected by component name. Can be a regex. Example: \"^component1\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "src",
            "short" : "s",
            "descr" : "A source directory containing viash config files, possibly structured in a hierarchical folder structure. Default: src/.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "runner",
            "descr" : "Acts as a regular expression to filter the runner ids specified in the found config files. If this is not provided, all runners will be used. If no runners are defined in a config, the executable runner will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "engine",
            "descr" : "Acts as a regular expression to filter the engine ids specified in the found config files. If this is not provided, all engines will be used. If no engines are defined in a config, the native engine will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "parallel",
            "short" : "l",
            "descr" : "Whether or not to run the process in parallel.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "config_mod",
            "short" : "c",
            "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
            "default" : "List()",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "List[String]",
            "optType" : "opt"
          },
          {
            "name" : "target",
            "short" : "t",
            "descr" : "A target directory to build the executables into. Default: target/.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "colorize",
            "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "true",
              "false",
              "auto"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "loglevel",
            "descr" : "Specify the log level in use",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "error",
              "warn",
              "info",
              "debug",
              "trace"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "setup",
            "descr" : "Which @[setup strategy](docker_setup_strategy) for creating the container to use [Docker Engine only].",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "push",
            "descr" : "Whether or not to push the container to a Docker registry [Docker Engine only].",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "flatten",
            "short" : "f",
            "descr" : "Flatten the target builds, handy for building one runner/engine to a bin directory.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          }
        ]
      },
      {
        "name" : "test",
        "bannerCommand" : "viash ns test",
        "bannerDescription" : "Test a namespace containing many viash config files.",
        "bannerUsage" : "viash ns test [-n nmspc] [-s src] [-p docker] [--parallel] [--tsv file.tsv] [--setup cachedbuild] [--append]",
        "subcommands" : [
        ],
        "opts" : [
          {
            "name" : "query",
            "short" : "q",
            "descr" : "Filter which components get selected by component and @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace/component1$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_namespace",
            "short" : "n",
            "descr" : "Filter which namespaces get selected by @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_name",
            "descr" : "Filter which components get selected by component name. Can be a regex. Example: \"^component1\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "src",
            "short" : "s",
            "descr" : "A source directory containing viash config files, possibly structured in a hierarchical folder structure. Default: src/.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "runner",
            "descr" : "Acts as a regular expression to filter the runner ids specified in the found config files. If this is not provided, all runners will be used. If no runners are defined in a config, the executable runner will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "engine",
            "descr" : "Acts as a regular expression to filter the engine ids specified in the found config files. If this is not provided, all engines will be used. If no engines are defined in a config, the native engine will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "parallel",
            "short" : "l",
            "descr" : "Whether or not to run the process in parallel.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "config_mod",
            "short" : "c",
            "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
            "default" : "List()",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "List[String]",
            "optType" : "opt"
          },
          {
            "name" : "keep",
            "short" : "k",
            "descr" : "Whether or not to keep temporary files. By default, files will be deleted if all goes well but remain when an error occurs. By specifying --keep true, the temporary files will always be retained, whereas --keep false will always delete them. The temporary directory can be overwritten by setting defining a VIASH_TEMP directory.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "cpus",
            "descr" : "The maximum number of (logical) cpus a component is allowed to use.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Int",
            "optType" : "opt"
          },
          {
            "name" : "memory",
            "descr" : "The maximum amount of memory a component is allowed to allocate. Unit must be one of B, KB, MB, GB, TB or PB.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "colorize",
            "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "true",
              "false",
              "auto"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "loglevel",
            "descr" : "Specify the log level in use",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "error",
              "warn",
              "info",
              "debug",
              "trace"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "setup",
            "descr" : "Which @[setup strategy](docker_setup_strategy) for creating the container to use [Docker Engine only].",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "tsv",
            "short" : "t",
            "descr" : "Path to write a summary of the test results to.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "append",
            "short" : "a",
            "descr" : "Append to tsv instead of overwrite",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "dry_run",
            "descr" : "Only generate the test scripts, do not run them.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "deterministic_working_directory",
            "descr" : "Name of the working directory in the temporary directory. If not set, the working directory name will be a partially randomized name.",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "type" : "String",
            "optType" : "opt"
          }
        ]
      },
      {
        "name" : "list",
        "bannerCommand" : "viash ns list",
        "bannerDescription" : "List a namespace containing many viash config files.",
        "bannerUsage" : "viash ns list [-n nmspc] [-s src] [-p docker]",
        "subcommands" : [
        ],
        "opts" : [
          {
            "name" : "query",
            "short" : "q",
            "descr" : "Filter which components get selected by component and @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace/component1$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_namespace",
            "short" : "n",
            "descr" : "Filter which namespaces get selected by @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_name",
            "descr" : "Filter which components get selected by component name. Can be a regex. Example: \"^component1\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "src",
            "short" : "s",
            "descr" : "A source directory containing viash config files, possibly structured in a hierarchical folder structure. Default: src/.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "runner",
            "descr" : "Acts as a regular expression to filter the runner ids specified in the found config files. If this is not provided, all runners will be used. If no runners are defined in a config, the executable runner will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "engine",
            "descr" : "Acts as a regular expression to filter the engine ids specified in the found config files. If this is not provided, all engines will be used. If no engines are defined in a config, the native engine will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "parallel",
            "short" : "l",
            "descr" : "Whether or not to run the process in parallel.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "config_mod",
            "short" : "c",
            "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
            "default" : "List()",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "List[String]",
            "optType" : "opt"
          },
          {
            "name" : "colorize",
            "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "true",
              "false",
              "auto"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "loglevel",
            "descr" : "Specify the log level in use",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "error",
              "warn",
              "info",
              "debug",
              "trace"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "format",
            "short" : "f",
            "descr" : "Which output format to use.",
            "default" : "yaml",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "choices" : [
              "yaml",
              "json"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "parse_argument_groups",
            "descr" : "DEPRECATED. This is now always enabled. Whether or not to postprocess each component's @[argument groups](argument_groups).",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          }
        ]
      },
      {
        "name" : "exec",
        "bannerCommand" : "viash ns exec",
        "bannerDescription" : "Execute a command for all found Viash components.\nThe syntax of this command is inspired by `find . -exec echo {} \\;`.\n\nThe following fields are automatically replaced:  \n\n * `{}` | `{path}`: path to the config file\n * `{abs-path}`: absolute path to the config file\n * `{dir}`: path to the parent directory of the config file\n * `{abs-dir}`: absolute path to the directory of the config file\n * `{main-script}`: path to the main script (if any)\n * `{abs-main-script}`: absolute path to the main script (if any)\n * `{name}`: name of the component\n * `{functionality-name}`: name of the component (deprecated)\n * `{namespace}`: namespace of the component\n * `{runner}`: selected runner id (only when --apply_runner is used)\n * `{engine}`: selected engine id (only when --apply_engine is used)\n * `{output}`: path to the destination directory when building the component\n * `{abs-output}`: absolute path to the destination directory when building the component\n\nA command suffixed by `\\;` (or nothing) will execute one command for each\nof the Viash components, whereas a command suffixed by `+` will execute one\ncommand for all Viash components.",
        "bannerUsage" : "viash ns exec 'echo {path} \\\\;'\nviash ns exec 'chmod +x {main-script} +'",
        "subcommands" : [
        ],
        "opts" : [
          {
            "name" : "query",
            "short" : "q",
            "descr" : "Filter which components get selected by component and @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace/component1$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_namespace",
            "short" : "n",
            "descr" : "Filter which namespaces get selected by @[namespace](namespace) name. Can be a regex. Example: \"^mynamespace$\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "query_name",
            "descr" : "Filter which components get selected by component name. Can be a regex. Example: \"^component1\".",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "src",
            "short" : "s",
            "descr" : "A source directory containing viash config files, possibly structured in a hierarchical folder structure. Default: src/.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "runner",
            "descr" : "Acts as a regular expression to filter the runner ids specified in the found config files. If this is not provided, all runners will be used. If no runners are defined in a config, the executable runner will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "engine",
            "descr" : "Acts as a regular expression to filter the engine ids specified in the found config files. If this is not provided, all engines will be used. If no engines are defined in a config, the native engine will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "parallel",
            "short" : "l",
            "descr" : "Whether or not to run the process in parallel.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "config_mod",
            "short" : "c",
            "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
            "default" : "List()",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "List[String]",
            "optType" : "opt"
          },
          {
            "name" : "colorize",
            "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "true",
              "false",
              "auto"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "loglevel",
            "descr" : "Specify the log level in use",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "error",
              "warn",
              "info",
              "debug",
              "trace"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "apply_runner",
            "short" : "r",
            "descr" : "Fills in the {runner} and {output} field by applying each runner to the \nconfig separately. Note that this results in the provided command being applied\nonce for every runner that matches the --runner regex.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "apply_engine",
            "short" : "e",
            "descr" : "Fills in the {engine} and {output} field by applying each engine to the \nconfig separately. Note that this results in the provided command being applied\nonce for every engine that matches the --engine regex.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "dry_run",
            "short" : "d",
            "descr" : "Perform a dry run.",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          },
          {
            "name" : "cmd",
            "descr" : "The command to execute for each viash config file in the namespace.",
            "required" : true,
            "hidden" : false,
            "type" : "String",
            "optType" : "trailArgs"
          }
        ]
      }
    ],
    "opts" : [
    ]
  },
  {
    "name" : "config",
    "subcommands" : [
      {
        "name" : "view",
        "bannerCommand" : "viash config view",
        "bannerDescription" : "View the config file after parsing.",
        "bannerUsage" : "viash config view config.vsh.yaml",
        "subcommands" : [
        ],
        "opts" : [
          {
            "name" : "runner",
            "descr" : "Specifies which runner amongst those specified in the config to use. If this is not provided, the first runner will be used. If no runners are defined in the config, the executable runner will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "engine",
            "descr" : "A regex to determine which engines amongst those specified in the config to use. If this is not provided, all engines will be used. If no engines are defined in the config, the native engine will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "config",
            "descr" : "A viash config file (example: `config.vsh.yaml`). This argument can also be a script with the config as a header.",
            "default" : "config.vsh.yaml",
            "required" : true,
            "hidden" : false,
            "type" : "String",
            "optType" : "trailArgs"
          },
          {
            "name" : "config_mod",
            "short" : "c",
            "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
            "default" : "List()",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "List[String]",
            "optType" : "opt"
          },
          {
            "name" : "colorize",
            "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "true",
              "false",
              "auto"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "loglevel",
            "descr" : "Specify the log level in use",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "error",
              "warn",
              "info",
              "debug",
              "trace"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "format",
            "short" : "f",
            "descr" : "Which output format to use.",
            "default" : "yaml",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "choices" : [
              "yaml",
              "json"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "parse_argument_groups",
            "descr" : "DEPRECATED. This is now always enabled. Whether or not to postprocess each component's @[argument groups](argument_groups).",
            "default" : "false",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "Boolean",
            "optType" : "opt"
          }
        ]
      },
      {
        "name" : "inject",
        "bannerCommand" : "viash config inject",
        "bannerDescription" : "Inject a Viash header into the main script of a Viash component.",
        "bannerUsage" : "viash config inject config.vsh.yaml",
        "subcommands" : [
        ],
        "opts" : [
          {
            "name" : "runner",
            "descr" : "Specifies which runner amongst those specified in the config to use. If this is not provided, the first runner will be used. If no runners are defined in the config, the executable runner will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "engine",
            "descr" : "A regex to determine which engines amongst those specified in the config to use. If this is not provided, all engines will be used. If no engines are defined in the config, the native engine will be used.",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "String",
            "optType" : "opt"
          },
          {
            "name" : "config",
            "descr" : "A viash config file (example: `config.vsh.yaml`). This argument can also be a script with the config as a header.",
            "default" : "config.vsh.yaml",
            "required" : true,
            "hidden" : false,
            "type" : "String",
            "optType" : "trailArgs"
          },
          {
            "name" : "config_mod",
            "short" : "c",
            "descr" : "Modify a viash config at runtime using @[dynamic config modding](config_mod).",
            "default" : "List()",
            "required" : false,
            "argName" : "arg",
            "hidden" : false,
            "type" : "List[String]",
            "optType" : "opt"
          },
          {
            "name" : "colorize",
            "descr" : "Specify whether the console output should be colorized. If not specified, we attempt to detect this automatically.",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "true",
              "false",
              "auto"
            ],
            "type" : "String",
            "optType" : "choice"
          },
          {
            "name" : "loglevel",
            "descr" : "Specify the log level in use",
            "required" : false,
            "argName" : "arg",
            "hidden" : true,
            "choices" : [
              "error",
              "warn",
              "info",
              "debug",
              "trace"
            ],
            "type" : "String",
            "optType" : "choice"
          }
        ]
      }
    ],
    "opts" : [
    ]
  }
]