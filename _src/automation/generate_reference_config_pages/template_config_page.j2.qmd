---
title: "{{title}}"
search: true
{%- if order is defined %}
order: {{order}}
{%- endif %}
---
{% for d in data|sort(attribute="name") -%}

{% if not d.name == "__this__" %}
## {{d.name|replace("`__merge__", "\_\_merge\_\_")}}{# Replace fixes __merge__ being rendered bold and coming before __this__ when sorted #}
{% set niceType = d.niceType|replace("Option of ", "") -%}
{% if "OneOrMore of " in niceType -%}
{% set oneormore = true -%}
{% set niceType = niceType|replace("OneOrMore of ", "") -%}
{% endif -%}
{% if "Either\n" in niceType -%}
{% set either = true -%}
{% set niceType = niceType|replace("Either\n  - ", "") -%}
{% set niceList = niceType.split("\n  - ") -%}
{% endif -%}
{% if oneormore and either %}
**Type**: `{{niceList[0]}}` / `{{niceList[1]}}` / `List of {{niceList[0]}}` / `List of {{niceList[1]}}`
{% elif oneormore %}
**Type**: `{{niceType}}` / `List of {{niceType}}`
{% elif either %}
**Type**: `{{niceList[0]}}` / `{{niceList[1]}}`
{% else %}
**Type**: `{{niceType}}`
{% endif %}
{%- if d.default is defined %}
**Default**: `{{d.default}}`
{% endif %}
{% else %}
{% endif -%}
{% if d.removed is defined -%}
::: {.callout-warning}
{% if d.removed.deprecation is defined and d.removed.deprecation|length -%}
Deprecated since {{d.removed.deprecation}}. {% endif %}
Removed since {{d.removed.removal}}. {{d.removed.message}}
:::
{% endif -%}
{%- if d.deprecated is defined -%}
::: {.callout-warning}
Deprecated since {{d.deprecated.deprecation}}.
{%- if d.deprecated.removal and d.deprecated.removal|length %} Planned removal at {{d.deprecated.removal}}. {% endif -%}
{{d.deprecated.message}}
:::
{% endif -%}

{%- if d.description is defined %}
{{-d.description}}
{% endif -%}

{% if d.example is defined %}
**Example{% if d.example|length > 1 %}s{% endif %}:**
{% for ex in d.example %}
{%- if ex.description is defined %}
{{ex.description}}
{% endif %}
```{{ex.format}}
{{ex.example|replace("\\n", "\n")}}
```
{% endfor -%}
{% endif -%}

{%- endfor %}
